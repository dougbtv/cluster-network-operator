---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: multus
  namespace: openshift-multus
  annotations:
    kubernetes.io/description: |
      This daemon set launches the Multus networking component on each node.
    release.openshift.io/version: "{{.ReleaseVersion}}"
spec:
  selector:
    matchLabels:
      app: multus
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: multus
        component: network
        type: infra
        openshift.io/component: network
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: "system-node-critical"
      tolerations:
      - operator: Exists
      serviceAccountName: multus
      initContainers:
      - name: multus-binary-copy
        image: {{.MultusImage}}
        command: ["/entrypoint/cnibincopy.sh"]
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /entrypoint
          name: shell-scripts
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
        env:
        - name: RHEL7_SOURCE_DIRECTORY
          value: "/usr/src/multus-cni/rhel7/bin/"
        - name: RHEL8_SOURCE_DIRECTORY
          value: "/usr/src/multus-cni/rhel8/bin/"
        - name: DEFAULT_SOURCE_DIRECTORY
          value: "/usr/src/multus-cni/bin/"
      - name: egress-router-binary-copy
        image: {{.EgressRouterImage}}
        command: ["/entrypoint/cnibincopy.sh"]
        volumeMounts:
        - mountPath: /entrypoint
          name: shell-scripts
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
        env:
        - name: RHEL7_SOURCE_DIRECTORY
          value: "/usr/src/egress-router-cni/rhel7/bin/"
        - name: RHEL8_SOURCE_DIRECTORY
          value: "/usr/src/egress-router-cni/rhel8/bin/"
        - name: DEFAULT_SOURCE_DIRECTORY
          value: "/usr/src/egress-router-cni/bin/"
      - name: copy-ocp-iptables-rules-plugins
        image: {{.CNIPluginsImage}}
        command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            cp -f /entrypoint/ocp-set-iptables-rules.sh /host/opt/cni/bin/ocp-set-iptables-rules
            chmod +x /host/opt/cni/bin/ocp-set-iptables-rules
        volumeMounts:
        - mountPath: /entrypoint
          name: shell-scripts
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
      - name: cni-plugins
        image: {{.CNIPluginsImage}}
        command: ["/entrypoint/cnibincopy.sh"]
        volumeMounts:
        - mountPath: /entrypoint
          name: shell-scripts
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
        env:
        - name: RHEL7_SOURCE_DIRECTORY
          value: "/usr/src/plugins/rhel7/bin/"
        - name: RHEL8_SOURCE_DIRECTORY
          value: "/usr/src/plugins/rhel8/bin/"
        - name: DEFAULT_SOURCE_DIRECTORY
          value: "/usr/src/plugins/bin/"
      - name: routeoverride-cni
        image: {{.RouteOverrideImage}}
        command: ["/entrypoint/cnibincopy.sh"]
        volumeMounts:
        - mountPath: /entrypoint
          name: shell-scripts
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
        env:
        - name: RHEL7_SOURCE_DIRECTORY
          value: "/usr/src/route-override/rhel7/bin/"
        - name: RHEL8_SOURCE_DIRECTORY
          value: "/usr/src/whereabouts/rhel8/bin/"
        - name: DEFAULT_SOURCE_DIRECTORY
          value: "/usr/src/route-override/bin/"
      - name: whereabouts-cni-bincopy
        image: {{.WhereaboutsImage}}
        command: ["/entrypoint/cnibincopy.sh"]
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        volumeMounts:
        - mountPath: /entrypoint
          name: shell-scripts
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
        env:
        - name: RHEL7_SOURCE_DIRECTORY
          value: "/usr/src/whereabouts/rhel7/bin/"
        - name: RHEL8_SOURCE_DIRECTORY
          value: "/usr/src/whereabouts/rhel8/bin/"
        - name: DEFAULT_SOURCE_DIRECTORY
          value: "/usr/src/whereabouts/bin/"
      - name: whereabouts-cni
        image: {{.WhereaboutsImage}}
        command: ["/entrypoint/whereabouts.sh"]
        volumeMounts:
        - mountPath: /entrypoint
          name: shell-scripts
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - name: system-cni-dir
          mountPath: /host/etc/cni/net.d
        env:
        - name: KUBERNETES_SERVICE_PORT
          value: "{{.KUBERNETES_SERVICE_PORT}}"
        - name: KUBERNETES_SERVICE_HOST
          value: "{{.KUBERNETES_SERVICE_HOST}}"
        - name: CNI_BIN_DIR
          value: "/host/opt/cni/bin/"
        - name: CNI_CONF_DIR
          value: "/host/etc/cni/net.d"
        - name: SLEEP
          value: "false"
        - name: WHEREABOUTS_NAMESPACE
          value: "openshift-multus"
      containers:
      - name: kube-multus
        image: {{.MultusImage}}
        command: ["/entrypoint.sh"]
        args:
        - "--multus-conf-file=auto"
        - "--multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig"
{{- if eq .DefaultNetworkType "OpenShiftSDN"}}
        - "--multus-autoconfig-dir=/host/var/run/multus/cni/net.d"
        - "--readiness-indicator-file=/var/run/multus/cni/net.d/80-openshift-network.conf"
{{- else if eq .DefaultNetworkType "OVNKubernetes"}}
        - "--readiness-indicator-file=/var/run/multus/cni/net.d/10-ovn-kubernetes.conf"
        - "--multus-autoconfig-dir=/host/var/run/multus/cni/net.d"
{{- else if eq .DefaultNetworkType "Kuryr"}}
        - "--multus-autoconfig-dir=/host/var/run/multus/cni/net.d"
{{- else }}
        - "--multus-autoconfig-dir=/host/etc/cni/net.d"
{{- end}}
{{- if .DisableMultiNetwork }}
        - "--disable-annotation-read=true"
{{- end}}
        - "--delegates-append={\"type\": \"ocp-set-iptables-rules\", \"name\": \"ocp-iptables-rules\", \"cniVersion\": \"0.4.0\"}"
        - "--cleanup-config-on-exit=true"
        - "--namespace-isolation=true"
        - "--multus-log-level=verbose"
        - "--cni-version=0.3.1"
        - "--additional-bin-dir=/opt/multus/bin"
        - "--skip-multus-binary-copy=true"
        - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
        resources:
          requests:
            cpu: 10m
            memory: 150Mi
        securityContext:
          privileged: true
        terminationGracePeriodSeconds: 10
        volumeMounts:
        - name: system-cni-dir
          mountPath: /host/etc/cni/net.d
        - name: multus-cni-dir
          mountPath: /host/var/run/multus/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
        env:
        - name: KUBERNETES_SERVICE_PORT
          value: "{{.KUBERNETES_SERVICE_PORT}}"
        - name: KUBERNETES_SERVICE_HOST
          value: "{{.KUBERNETES_SERVICE_HOST}}"
      volumes:
        - name: system-cni-dir
          hostPath:
            path: {{ .SystemCNIConfDir }}
        - name: multus-cni-dir
          hostPath:
            path: {{ .MultusCNIConfDir }}
        - name: cnibin
          hostPath:
            path: {{ .CNIBinDir }}
        - name: os-release
          hostPath:
            path: /etc/os-release
            type: File
        - name: shell-scripts
          configMap:
            name: cni-shell-scripts
            defaultMode: 0744
